package boyermoormajority

/*
üß† –ó–∞–¥–∞—á–∞: Majority Element

–î–∞–Ω –º–∞—Å—Å–∏–≤ —Ü–µ–ª—ã—Ö —á–∏—Å–µ–ª nums, –≤ –∫–æ—Ç–æ—Ä–æ–º –≤—Å–µ–≥–¥–∞ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç —ç–ª–µ–º–µ–Ω—Ç, –≤—Å—Ç—Ä–µ—á–∞—é—â–∏–π—Å—è –±–æ–ª–µ–µ —á–µ–º ‚åän / 2‚åã —Ä–∞–∑.

–ù—É–∂–Ω–æ –≤–µ—Ä–Ω—É—Ç—å —ç—Ç–æ—Ç —ç–ª–µ–º–µ–Ω—Ç.


Input:  nums = [3,2,3]
Output: 3

Input:  nums = [2,2,1,1,1,2,2]
Output: 2
*/

import (
	"testing"

	"github.com/stretchr/testify/assert"
)

func Test_majority_element_boyer_moore(t *testing.T) {
	tests := []struct {
		name   string
		nums   []int
		result int
	}{
		{
			name:   "test 1",
			nums:   []int{3, 2, 3},
			result: 3,
		},
		{
			name:   "test 2",
			nums:   []int{2, 2, 1, 1, 1, 2, 2},
			result: 2,
		},
	}

	for _, tt := range tests {
		t.Run(tt.name, func(t *testing.T) {
			got := majorityElementBoyerMoore(tt.nums)
			assert.Equal(t, tt.result, got)
		})
	}
}
